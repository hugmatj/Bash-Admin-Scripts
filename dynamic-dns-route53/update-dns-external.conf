#!/usr/bin/env bash
# Bash config file for update-dns-external.sh
# It is 'sourced' from that script if it exists

# This is a separate config file so you can keep it apart from code.
################################################################
# START OF CONFIGURATION SECTION
################################################################

# Do you want DEBUG on? Anything true will be on (1, true, randomstring), false (0/unset) will be off
DEBUG=${DEBUG:-0}
export DEBUG

# FQDN can be static or use this hosts hostname output for it
# FQDN="$(hostname)."
# Don't forget to put a '.' at the end of hostname used
FQDN="host.example.com."
export FQDN

# Host is everything left of the first '.'
HOST=${FQDN%%.*}
export HOST

# Apex domain is everything after the first '.', note this won't work for all sub-domains/configurations
# for example it won't work if your FQDN is www.subdomain.example.com and the apex record you want is example.com and not subdomain.example.com
APEXD=${FQDN#*.}
export APEXD

# Hosted zone ID from Route53
# aws --profile ${P} route53 list-hosted-zones-by-name --output text --dns-name "example.com." --query 'HostedZones[0].Id'
HOSTED_ZONE_ID="AWSZONEID"
export HOSTED_ZONE_ID

# Location of a file to record the last public IP we saw
LAST_IP_FILE="${HOME}/etc/lastpublicip"
export LAST_IP_FILE

# Which AWS profile you want to use, if you don't have one set to 'default'
# AWS_PROFILE="default"
AWS_PROFILE="default"
export AWS_PROFILE

# Do you want to use the Route 53 API to check your IP?
# API calls are more expensive, potentially in $$$ than DNS queries
USE_R53_API=0
export USE_R53_API


# This is the JSON template file for the Route 53 update
# Ideally Route 53 wouldn't need this, but I did it this way years ago and am too lazy rn to change
# Feel free to send me a PR with a single script version or change the API to a better one
EXTERNAL_JSON_TEMPLATE="${HOME}/etc/external.json"
export EXTERNAL_JSON_TEMPLATE

# Where to get the IP from, can return almost any text
# We'll grep -o out the IP address, and only use the first 1
# This may break if your page has multiple IPs in it
# I use www.dangfast.com/ip as it's my test site using httpbin.org
# HTTPBin has /ip built in, and returns JSON format by default
# No guarantee it'll be up forever. 
# Note, using HTTPS is more reliable to get your actual IP
# As HTTP is more commonly proxied than HTTPS, which is more commoly routed
IP_HTTP_URL="https://www.dangfast.com/ip"
export IP_HTTP_URL

# print a debug of the CSV file to track changes over time to
# Todo: make this a live google spreadsheet
CSV_HISTORY="${HOME}/etc/ip-log-change-$(date +%Y).csv"
export CSV_HISTORY

################################################################
# END OF CONFIGURATION SECTION
################################################################
